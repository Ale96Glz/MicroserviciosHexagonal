name: CI/CD Pipeline - Microservicios Hexagonales

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  JAVA_VERSION: '17'
  MAVEN_VERSION: '3.9.6'
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Tarea de build de Docker images
  build-docker-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build Orders Service
        working-directory: hexagonal-orders-service
        run: mvn clean package -DskipTests

      - name: Build Delivery Service
        working-directory: hexagonal-delivery-service
        run: mvn clean package -DskipTests

      - name: Set lowercase repository name
        run: echo "LOWERCASE_REPO=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.LOWERCASE_REPO }}/orders-service
            ${{ env.DOCKER_REGISTRY }}/${{ env.LOWERCASE_REPO }}/delivery-service
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Orders Service
        uses: docker/build-push-action@v5
        with:
          context: ./hexagonal-orders-service
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.LOWERCASE_REPO }}/orders-service:${{ steps.meta.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Delivery Service
        uses: docker/build-push-action@v5
        with:
          context: ./hexagonal-delivery-service
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.LOWERCASE_REPO }}/delivery-service:${{ steps.meta.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}

  # Tarea de notificaciones
  notify:
    name: Notificaciones
    runs-on: ubuntu-latest
    needs: build-docker-images
    if: always()
    steps:
      - name: Notify on Success
        if: success()
        run: |
          echo "üéâ Pipeline completado exitosamente!"
          echo "‚úÖ Build de Docker images completado"

      - name: Notify on Failure
        if: failure()
        run: |
          echo "‚ùå Pipeline fall√≥!"
          echo "üîç Revisar los logs para m√°s detalles" 